<launch>
<!-- ============ Arguments ============ -->
  <!-- General -->
  <arg name="use_rio" default="false"/>
  <arg name="use_detectron" default="true"/>
  <arg name="visualize" default="true"/>
  
  <param name="/use_sim_time" value="false" />
    
  <!-- Mapper -->
  <arg name="config" default="realsense_owlvit_sam_online"/> <!-- <flat,rio>_<groundtruth,detectron>, single_tsdf, realsense_owlvit_sam -->
  <arg name="shutdown_when_finished" default="false"/> 
  
  <!-- Save/Load maps -->
  <arg name="load_map" default = "false"/>
  <arg name="load_file" default = "/mnt/data/3d-lidar/semantic/panoptic_mapping/test_result/run1.panmap"/>


<!-- ============ Run ============ -->
  <!-- Mapper -->
  <node name="panoptic_mapper" pkg="panoptic_mapping_ros" type="panoptic_mapper_node" output="screen" required="$(arg shutdown_when_finished)">
    <!-- Config -->
    <param name="config_path" value="$(find panoptic_mapping_ros)/config/mapper/$(arg config).yaml"/>
     
    <!-- Input -->
    <remap from="color_image_in" to="/camera/color/image_raw"/>
    <remap from="depth_image_in" to="/camera/aligned_depth_to_color/image_raw"/>
    <remap from="segmentation_image_in" to="/segmentation_mask"/>
    <remap from="labels_in" to="/detection_result"/>
  </node>  
  
  <!-- Map loader -->
  <node name="map_loader" pkg="panoptic_mapping_utils" type="map_loader.py" if="$(arg load_map)" output="screen">
     <param name="path" value="$(arg load_file)" /> 
     <param name="srv_name" value="/panoptic_mapper/load_map" /> 
     <param name="delay" value="0.1" /> 
  </node>  
  
  <!-- RVIZ Visualization-->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find panoptic_mapping_ros)/config/rviz/devel.rviz" output="screen" if="$(arg visualize)"/>

</launch>
